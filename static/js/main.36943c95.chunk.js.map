{"version":3,"sources":["components/to-do-list-item/to-do-list-item.js","components/to-do-list-item/index.js","components/to-do-list/to-do-list.js","components/to-do-list/index.js","components/statistic/statistic.js","components/statistic/index.js","components/to-do-form/index.js","components/to-do-form/to-do-form.js","components/search-form/search-form.js","components/to-do-delete/to-do-delete.js","components/to-do-delete/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["ToDoListItem","props","isDone","isImportant","text","onItemClick","onImportantClick","onDeleteItemClick","id","classN","className","type","onClick","ToDoList","data","map","task","key","Statistic","all","done","mark","onStatClick","filter","baseClass","doneClass","markClass","allClass","role","ToDoForm","state","input","onAddTask","onAddItem","setState","onInputChange","ev","target","value","placeholder","aria-label","onChange","this","Component","SearchForm","onSearchInput","ToDoDelete","onDeleteClick","App","maxId","todos","search","db","forEach","el","dbUpdate","item","generateItem","unshift","dbAdd","dbDelete","dbDeleteAll","dbInit","dbRead","trans","onsuccess","result","reduce","max","visible","dbOperation","window","indexedDB","open","onupgradeneeded","createObjectStore","keyPath","req","accessType","transaction","onerror","console","error","tasks","objectStore","add","put","delete","transRead","getAll","stateInit","clear","log","length","counter","list","regS","RegExp","test","stats","generateStatistic","filteredTasks","searchedArr","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.36943c95.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './to-do-list-item.css';\r\n\r\nfunction ToDoListItem(props){\r\n    const { \r\n        isDone, \r\n        isImportant, \r\n        text,\r\n        onItemClick,\r\n        onImportantClick,\r\n        onDeleteItemClick,\r\n        id\r\n    } = props;\r\n    let classN = 'list-group-item';\r\n    classN += isDone ? ' done' : '';\r\n    classN += isImportant ? ' important' : '';\r\n\r\n    return (\r\n        <li className={ classN }>\r\n            <button \r\n                type=\"button\"\r\n                className=\"float-right btn btn-danger btn-sm\"\r\n                onClick={ () => onDeleteItemClick(id) }>\r\n                <i className=\"fas fa-trash-alt\"></i>\r\n            </button>\r\n            <button \r\n                type=\"button\"\r\n                className=\"float-right btn btn-primary btn-sm mr-1\"\r\n                onClick={ () => onImportantClick(id) }>\r\n                <i className=\"fas fa-exclamation\"></i> \r\n            </button>\r\n            <span\r\n                onClick={ () => onItemClick(id) }\r\n                className=\"d-block\"\r\n            >{ text }</span>\r\n            \r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ToDoListItem;\r\n\r\n// on_название_события\r\n// onclick => onClick\r\n// onload => onLoad\r\n// oncontextmenu\r\n// onkeypress\r\n// onkeydown\r\n// onmouseenter","import ToDoListItem from './to-do-list-item.js';\r\n\r\nexport default ToDoListItem;","import React from 'react';\r\nimport ToDoListItem from '../to-do-list-item';\r\n\r\nimport './to-do-list.css';\r\n\r\nfunction ToDoList(props){\r\n    const { data, \r\n        onItemClick, \r\n        onImportantClick,\r\n        onDeleteItemClick\r\n    } = props;\r\n\r\n    return (\r\n        <ul className=\"toDoList list-group\">\r\n            { data.map(task => (\r\n                <ToDoListItem\r\n                    key={ task.id }\r\n                    onItemClick={ onItemClick }\r\n                    onImportantClick={ onImportantClick }\r\n                    onDeleteItemClick={ onDeleteItemClick }\r\n                    { ...task }\r\n                />\r\n            )) }\r\n        </ul>   \r\n\r\n    );\r\n}\r\n\r\nexport default ToDoList;","import ToDoList from './to-do-list.js';\r\n\r\nexport default ToDoList;","import React from 'react';\r\n\r\nimport './statistic.css';\r\n\r\nfunction Statistic(props){\r\n    const { \r\n        all, \r\n        done, \r\n        mark, \r\n        onStatClick, \r\n        filter \r\n    } = props;\r\n    \r\n    const baseClass = 'badge m-1 p-2 c-pointer';\r\n    const doneClass = `${baseClass} badge-dark${filter === 'done'? ' badge-pill': ''}`;\r\n    const markClass = `${baseClass} badge-info${filter === 'mark'? ' badge-pill': ''}`;\r\n    const allClass = `${baseClass} badge-success${filter === 'all'? ' badge-pill': ''}`;\r\n\r\n    return (\r\n        <div className=\"statistic float-right\">\r\n            <span \r\n                className={ doneClass }\r\n                role=\"button\"\r\n                onClick={ () => onStatClick('done') } >DONE: { done }</span>\r\n            <span \r\n                className={ markClass }\r\n                role=\"button\"\r\n                onClick={ () => onStatClick('mark') } >MARK: { mark }</span>\r\n            <span \r\n                className={ allClass } \r\n                role=\"button\"\r\n                onClick={ () => onStatClick('all') } >ALL: { all }</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Statistic;","import Statistic from './statistic.js';\r\n\r\nexport default Statistic;","import ToDoForm from './to-do-form.js';\r\n\r\nexport default ToDoForm;","import React, { Component } from 'react';\r\n\r\nimport './to-do-form.css';\r\n\r\nexport default class ToDoForm extends Component{\r\n    state = {\r\n        input : ''\r\n    }\r\n\r\n    onAddTask = () => {\r\n        this.props.onAddItem(this.state.input);\r\n        this.setState({\r\n            input : ''\r\n        });\r\n    }\r\n\r\n    onInputChange = (ev) => {\r\n        this.setState({\r\n            input : ev.target.value\r\n        });\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"input-group mb-3\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"Add todo task\" \r\n                    aria-label=\"Add todo task\"\r\n                    onChange={ this.onInputChange }\r\n                    value={ this.state.input } />\r\n                <div className=\"input-group-append\">\r\n                    <button \r\n                        className=\"btn btn-outline-secondary\" \r\n                        type=\"button\"\r\n                        onClick={ this.onAddTask }>\r\n                        Add\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n","import React from 'react';\r\n\r\nimport './search-form.css';\r\n\r\nfunction SearchForm(props){\r\n    return (\r\n        <>\r\n            <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\">\r\n                    <i className=\"fas fa-search\"></i>\r\n                </span>\r\n            </div>\r\n            <input \r\n                type=\"text\" \r\n                className=\"form-control\" \r\n                placeholder=\"type here\" \r\n                aria-label=\"Username\"\r\n                onChange={ props.onSearchInput }  />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SearchForm;\r\n","import React from 'react';\r\n\r\nfunction ToDoDelete(props){\r\n    return (\r\n        <div className=\"d-flex justify-content-center w-100\"> \r\n            <button \r\n                type=\"button\" \r\n                className=\"btn btn-danger w-100 m-3\"\r\n                onClick={ props.onDeleteClick }>Delete All</button>          \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ToDoDelete;","import ToDoDelete from \"./to-do-delete.js\";\r\n\r\nexport default ToDoDelete;","import App from './app.js';\r\n\r\nexport default App;","import React, { Component } from 'react';\r\nimport ToDoList from '../to-do-list';\r\nimport Statistic from '../statistic';\r\nimport ToDoForm from '../to-do-form';\r\nimport SearchForm from '../search-form/search-form';\r\nimport ToDoDelete from '../to-do-delete';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component{// React Component\r\n    state = {\r\n        maxId : 1,\r\n        todos : [],\r\n        filter : 'all',\r\n        search : ''\r\n    }\r\n\r\n    db = null;\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.dbInit();\r\n        this.dbRead();\r\n    }\r\n\r\n    stateInit(trans){\r\n        trans.onsuccess = ev =>{\r\n            const todos = ev.target.result;\r\n\r\n            const maxId = todos.reduce((max, { id }) => {\r\n                return max > id? max: id;\r\n            }, 1);\r\n\r\n            this.setState({ todos, visible : todos,  maxId });\r\n        }\r\n    }\r\n\r\n    dbRead(){\r\n        this.dbOperation('read');\r\n    }\r\n\r\n    dbInit(){\r\n        const req = window.indexedDB.open('tasksBank', 1);\r\n\r\n        req.onupgradeneeded = ev => {\r\n             ev.target.result.createObjectStore('tasks', {\r\n                keyPath : 'id'\r\n            });\r\n        }\r\n    }\r\n\r\n    dbAdd(item){\r\n        this.dbOperation('create', item); \r\n    }\r\n\r\n    dbUpdate(item){\r\n        this.dbOperation('update', item); \r\n    }\r\n\r\n    dbDelete(id){\r\n        this.dbOperation('delete', id);        \r\n    }\r\n\r\n    dbDeleteAll(){\r\n        this.dbOperation('delete-all');        \r\n    }\r\n\r\n    dbOperation(type, data){\r\n        const req = window.indexedDB.open('tasksBank', 1);\r\n\r\n        const accessType = type === 'read'? 'readonly': 'readwrite';\r\n\r\n        req.onsuccess = () => {\r\n            const trans = req.result.transaction('tasks', accessType);\r\n            trans.onerror = () => {\r\n                console.error('error in looking for task object store');\r\n            }\r\n            const tasks = trans.objectStore('tasks');\r\n            \r\n            switch(type){\r\n                case 'create' : {\r\n                    tasks.add(data);\r\n                    break;\r\n                }\r\n                case 'update' : {\r\n                    tasks.put(data);\r\n                    break;\r\n                }\r\n                case 'delete' : {\r\n                    tasks.delete(data);\r\n                    break;\r\n                }\r\n                case 'read' : {\r\n                    const transRead = tasks.getAll();\r\n                    this.stateInit(transRead);\r\n                    break;\r\n                }\r\n                case 'delete-all' : {\r\n                    tasks.clear();\r\n                    break;\r\n                }\r\n                default : {\r\n                    console.log(`Have no ide what I must to do with this ${type}`);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onItemClick = id => {\r\n        const todos = [...this.state.todos];\r\n\r\n        todos.forEach(el => {\r\n            if(el.id === id){\r\n                el.isDone = !el.isDone;\r\n                this.dbUpdate(el);\r\n            }\r\n        });\r\n\r\n        this.setState({ todos });\r\n    }\r\n\r\n    onImportantClick = id => {\r\n        const todos = [...this.state.todos];\r\n        todos.forEach(el => {\r\n            if(el.id === id){\r\n                el.isImportant = !el.isImportant;\r\n                this.dbUpdate(el);\r\n            }\r\n        });\r\n\r\n        this.setState({ todos });\r\n    }\r\n\r\n    onAddItem = (text) => {\r\n        const todos = [...this.state.todos];\r\n        const item = this.generateItem(text);\r\n        todos.unshift(item);\r\n        this.dbAdd(item);\r\n        this.setState({ todos });\r\n    }\r\n\r\n    generateItem(text){\r\n        if(text.length === 0){\r\n            text = 'empty task';\r\n        }\r\n        const id = this.state.maxId + 1;\r\n        this.setState({ maxId : id });\r\n        return {\r\n            id,\r\n            text,\r\n            isDone : false,\r\n            isImportant : false\r\n        }\r\n    }\r\n    \r\n    onDeleteItemClick = id => {\r\n        const todos = this.state.todos.filter(el => el.id !== id);\r\n        this.setState({ todos });\r\n        this.dbDelete(id);\r\n    }\r\n\r\n    onStatClick = filter => {\r\n        this.setState({ filter });\r\n    }\r\n\r\n    filter(){\r\n        const todos = [...this.state.todos];\r\n        \r\n        if(this.state.filter === 'all'){\r\n            return todos;\r\n        }\r\n\r\n        if(this.state.filter === 'done'){\r\n            const arrDone = todos.filter(task => task.isDone);\r\n            return arrDone;\r\n        }\r\n\r\n        if(this.state.filter === 'mark'){\r\n            const arrMark = todos.filter(task => task.isImportant);\r\n            return arrMark;\r\n        }\r\n    }\r\n\r\n    generateStatistic(){\r\n        const all = this.state.todos.length;\r\n\r\n        const done = this.state.todos.reduce((counter, { isDone }) => counter += isDone? 1: 0, 0);\r\n\r\n        const mark = this.state.todos.reduce((counter, { isImportant }) => counter += isImportant? 1: 0, 0);\r\n\r\n        return {\r\n            all,\r\n            done,\r\n            mark,\r\n            filter : this.state.filter,\r\n            onStatClick : this.onStatClick\r\n        };\r\n    }\r\n\r\n    search(list){\r\n        if(this.state.search === ''){\r\n            return list;\r\n        }\r\n\r\n        const regS = new RegExp(this.state.search, 'i');\r\n        const searchedArr = list.filter(({ text }) => {\r\n            return regS.test(text);\r\n        });\r\n\r\n        return searchedArr;\r\n    }\r\n\r\n    onSearchInput = ev => {\r\n        this.setState({\r\n            search : ev.target.value\r\n        });\r\n    }\r\n\r\n    onDeleteClick = () => {\r\n        this.setState({\r\n            maxId : 1,\r\n            todos : [],\r\n            filter : 'all',\r\n            search : ''\r\n        });\r\n\r\n        this.dbDeleteAll();\r\n    }\r\n\r\n    render(){           \r\n        const stats = this.generateStatistic();\r\n\r\n        const filteredTasks = this.filter();\r\n\r\n        const searchedArr = this.search(filteredTasks);\r\n\r\n        return (\r\n            <div className='app'>\r\n                <div className=\"input-group mb-3\">\r\n                    <Statistic\r\n                        { ...stats }\r\n                    />\r\n                    <SearchForm\r\n                        onSearchInput={ this.onSearchInput } />\r\n                </div>\r\n                <ToDoForm\r\n                    onAddItem={ this.onAddItem } />\r\n                <ToDoList \r\n                    data={ searchedArr }\r\n                    onItemClick={ this.onItemClick }\r\n                    onImportantClick={ this.onImportantClick }\r\n                    onDeleteItemClick={ this.onDeleteItemClick }/>      \r\n                <ToDoDelete\r\n                    onDeleteClick={ this.onDeleteClick }/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom'; \nimport App from './components/app';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}